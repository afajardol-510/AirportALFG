/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.Flight;
import core.models.Location;
import core.models.Passenger;
import core.models.Plane;
import com.formdev.flatlaf.FlatDarkLaf;
import core.controllers.FlightController;
import core.controllers.LocationController;
import core.controllers.PassengerController;
import core.controllers.PlaneController;
import core.controllers.utils.Response;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                jTabbedPane1.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            jComboxMonth.addItem("" + i);
            jComboxDDMonthFR.addItem("" + i);
            jComboxMonthUI.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            jComboxDay.addItem("" + i);
            jComboxDDDayFR.addItem("" + i);
            jComboxDayUI.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            jComboxDDHourFR.addItem("" + i);
            jComboxADHourFR.addItem("" + i);
            jComboxSDHourFR.addItem("" + i);
            jComboxHourDF.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            jComboxDDMinuteFR.addItem("" + i);
            jComboxADMinuteFR.addItem("" + i);
            jComboxSDMinuteFR.addItem("" + i);
            jComboxMinuteDF.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new core.models.PanelRound();
        panelRound2 = new core.models.PanelRound();
        jButtonCerrar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelAdministration = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        jPanelPassengerRegistration = new javax.swing.JPanel();
        jLabelCountry = new javax.swing.JLabel();
        jLabelIDPR = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jLabelLastName = new javax.swing.JLabel();
        jLabelBirthdate = new javax.swing.JLabel();
        jLabelMas = new javax.swing.JLabel();
        jtxtPhone1 = new javax.swing.JTextField();
        jtxtID = new javax.swing.JTextField();
        jtxtYear = new javax.swing.JTextField();
        jtxtCountry = new javax.swing.JTextField();
        jtxtPhone2 = new javax.swing.JTextField();
        jLabelPhone = new javax.swing.JLabel();
        jLabelGuion1 = new javax.swing.JLabel();
        jtxtLastName = new javax.swing.JTextField();
        jLabelGuion3 = new javax.swing.JLabel();
        jComboxMonth = new javax.swing.JComboBox<>();
        jtxtFirstName = new javax.swing.JTextField();
        jLabelGuion2 = new javax.swing.JLabel();
        jComboxDay = new javax.swing.JComboBox<>();
        jButtonRegister = new javax.swing.JButton();
        jPanelAirplaneRegistration = new javax.swing.JPanel();
        jLabelIDAR = new javax.swing.JLabel();
        jtxtIDAR = new javax.swing.JTextField();
        jLabelBrandAR = new javax.swing.JLabel();
        jtxtBrandAR = new javax.swing.JTextField();
        jtxtModelAR = new javax.swing.JTextField();
        jLabelModelAR = new javax.swing.JLabel();
        jtxtMaxCapacityAR = new javax.swing.JTextField();
        jLabelMaxCapacityAR = new javax.swing.JLabel();
        jtxtAirlineAR = new javax.swing.JTextField();
        jLabelAirlineAR = new javax.swing.JLabel();
        jButtonCreateAR = new javax.swing.JButton();
        jPanelLocationRegistration = new javax.swing.JPanel();
        jLabelAirportIDLR = new javax.swing.JLabel();
        jtxtAirportIDLR = new javax.swing.JTextField();
        jLabelAirportNameLR = new javax.swing.JLabel();
        jtxtAirportNameLR = new javax.swing.JTextField();
        jtxtAirportCityLR = new javax.swing.JTextField();
        jLabelAirportCityLR = new javax.swing.JLabel();
        jLabelAirportCountryLR = new javax.swing.JLabel();
        jtxtAirportCountryLR = new javax.swing.JTextField();
        jtxtAirportLatitudeLR = new javax.swing.JTextField();
        jLabelAirportLatitudeLR = new javax.swing.JLabel();
        jLabelAirportLongitudeLR = new javax.swing.JLabel();
        jtxtAirportLongitudeLR = new javax.swing.JTextField();
        jButtonCreateLR = new javax.swing.JButton();
        jPanelFlightRegistration = new javax.swing.JPanel();
        jLabelIDFR = new javax.swing.JLabel();
        jtxtIDFR = new javax.swing.JTextField();
        jLabelPlaneFR = new javax.swing.JLabel();
        jComboxPlaneFR = new javax.swing.JComboBox<>();
        jComboxDLocationFR = new javax.swing.JComboBox<>();
        jLabelDepartureLocationFR = new javax.swing.JLabel();
        jComboxALocationFR = new javax.swing.JComboBox<>();
        jLabelArrivalLocationFR = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jComboxSLocationFR = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabelDepartureDateFR = new javax.swing.JLabel();
        jtxtYearFR = new javax.swing.JTextField();
        jLabelGuion3FR = new javax.swing.JLabel();
        jComboxDDMonthFR = new javax.swing.JComboBox<>();
        jLabelGuion4FR = new javax.swing.JLabel();
        jComboxDDDayFR = new javax.swing.JComboBox<>();
        jLabelGuion5FR = new javax.swing.JLabel();
        jComboxDDHourFR = new javax.swing.JComboBox<>();
        jLabelGuion6FR = new javax.swing.JLabel();
        jComboxDDMinuteFR = new javax.swing.JComboBox<>();
        jComboxADHourFR = new javax.swing.JComboBox<>();
        jLabelGuion7FR = new javax.swing.JLabel();
        jComboxADMinuteFR = new javax.swing.JComboBox<>();
        jLabelGuion8FR = new javax.swing.JLabel();
        jComboxSDHourFR = new javax.swing.JComboBox<>();
        jComboxSDMinuteFR = new javax.swing.JComboBox<>();
        jButtonCreateFR = new javax.swing.JButton();
        jPanelUpdateInfo = new javax.swing.JPanel();
        jLabelIDUI = new javax.swing.JLabel();
        jtxtIDUI = new javax.swing.JTextField();
        jLabelFirstNameUI = new javax.swing.JLabel();
        jtxtFirstNameUI = new javax.swing.JTextField();
        jLabelLastNameUI = new javax.swing.JLabel();
        jtxtLastNameUI = new javax.swing.JTextField();
        jLabelBirthdateUI = new javax.swing.JLabel();
        jtxtYearUI = new javax.swing.JTextField();
        jComboxMonthUI = new javax.swing.JComboBox<>();
        jComboxDayUI = new javax.swing.JComboBox<>();
        jtxtPhone2UI = new javax.swing.JTextField();
        jLabelGuion9UI = new javax.swing.JLabel();
        jtxtPhone1UI = new javax.swing.JTextField();
        jLabelMasUI = new javax.swing.JLabel();
        jLabelPhoneUI = new javax.swing.JLabel();
        jLabelCountryUI = new javax.swing.JLabel();
        jtxtCountryUI = new javax.swing.JTextField();
        jButtonUpdateUI = new javax.swing.JButton();
        jPanelAddToFlight = new javax.swing.JPanel();
        jtxtIDATF = new javax.swing.JTextField();
        jLabelIDATF = new javax.swing.JLabel();
        jLabelFlightATF = new javax.swing.JLabel();
        jComboxFlightATF = new javax.swing.JComboBox<>();
        jButtonAddATF = new javax.swing.JButton();
        jPanelShowMyFlights = new javax.swing.JPanel();
        jScrollPaneSMF = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonRefreshSMF = new javax.swing.JButton();
        jPanelShowAllPassengers = new javax.swing.JPanel();
        jScrollPaneSAPA = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButtonRefreshSAPA = new javax.swing.JButton();
        jPanelShowAllFlights = new javax.swing.JPanel();
        jScrollPaneSAF = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButtonRefreshSAF = new javax.swing.JButton();
        jPanelShowAllPlanes = new javax.swing.JPanel();
        jButtonRefreshSAPL = new javax.swing.JButton();
        jScrollPaneSAPL = new javax.swing.JScrollPane();
        jTableSAPL = new javax.swing.JTable();
        jPanelShowAllLocations = new javax.swing.JPanel();
        jScrollPaneSAL = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButtonRefreshSAL = new javax.swing.JButton();
        jPanelDelayFlight = new javax.swing.JPanel();
        jComboxHourDF = new javax.swing.JComboBox<>();
        jLabelHoursDF = new javax.swing.JLabel();
        jLabelIDDF = new javax.swing.JLabel();
        jComboxIDDF = new javax.swing.JComboBox<>();
        jLabelMinutesDF = new javax.swing.JLabel();
        jComboxMinuteDF = new javax.swing.JComboBox<>();
        jButtonDelayDF = new javax.swing.JButton();
        panelRound3 = new core.models.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButtonCerrar.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonCerrar.setText("X");
        jButtonCerrar.setBorderPainted(false);
        jButtonCerrar.setContentAreaFilled(false);
        jButtonCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButtonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButtonCerrar)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        jTabbedPane1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        jPanelAdministration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanelAdministration.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        jPanelAdministration.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        jPanelAdministration.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        jTabbedPane1.addTab("Administration", jPanelAdministration);

        jPanelPassengerRegistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelCountry.setText("Country:");
        jPanelPassengerRegistration.add(jLabelCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        jLabelIDPR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDPR.setText("ID:");
        jPanelPassengerRegistration.add(jLabelIDPR, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jLabelFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelFirstName.setText("First Name:");
        jPanelPassengerRegistration.add(jLabelFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jLabelLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelLastName.setText("Last Name:");
        jPanelPassengerRegistration.add(jLabelLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabelBirthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelBirthdate.setText("Birthdate:");
        jPanelPassengerRegistration.add(jLabelBirthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabelMas.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelMas.setText("+");
        jPanelPassengerRegistration.add(jLabelMas, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        jtxtPhone1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtPhone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        jtxtID.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        jtxtYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        jtxtCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        jtxtPhone2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtPhone2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        jLabelPhone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelPhone.setText("Phone:");
        jPanelPassengerRegistration.add(jLabelPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabelGuion1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion1.setText("-");
        jPanelPassengerRegistration.add(jLabelGuion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        jtxtLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabelGuion3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion3.setText("-");
        jPanelPassengerRegistration.add(jLabelGuion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        jComboxMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        jPanelPassengerRegistration.add(jComboxMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        jtxtFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassengerRegistration.add(jtxtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabelGuion2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion2.setText("-");
        jPanelPassengerRegistration.add(jLabelGuion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        jComboxDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        jPanelPassengerRegistration.add(jComboxDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        jButtonRegister.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRegister.setText("Register");
        jButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterActionPerformed(evt);
            }
        });
        jPanelPassengerRegistration.add(jButtonRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        jTabbedPane1.addTab("Passenger registration", jPanelPassengerRegistration);

        jPanelAirplaneRegistration.setLayout(null);

        jLabelIDAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDAR.setText("ID:");
        jPanelAirplaneRegistration.add(jLabelIDAR);
        jLabelIDAR.setBounds(53, 96, 22, 25);

        jtxtIDAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(jtxtIDAR);
        jtxtIDAR.setBounds(180, 93, 130, 31);

        jLabelBrandAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelBrandAR.setText("Brand:");
        jPanelAirplaneRegistration.add(jLabelBrandAR);
        jLabelBrandAR.setBounds(53, 157, 50, 25);

        jtxtBrandAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(jtxtBrandAR);
        jtxtBrandAR.setBounds(180, 154, 130, 31);

        jtxtModelAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(jtxtModelAR);
        jtxtModelAR.setBounds(180, 213, 130, 31);

        jLabelModelAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelModelAR.setText("Model:");
        jPanelAirplaneRegistration.add(jLabelModelAR);
        jLabelModelAR.setBounds(53, 216, 55, 25);

        jtxtMaxCapacityAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(jtxtMaxCapacityAR);
        jtxtMaxCapacityAR.setBounds(180, 273, 130, 31);

        jLabelMaxCapacityAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelMaxCapacityAR.setText("Max Capacity:");
        jPanelAirplaneRegistration.add(jLabelMaxCapacityAR);
        jLabelMaxCapacityAR.setBounds(53, 276, 109, 25);

        jtxtAirlineAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(jtxtAirlineAR);
        jtxtAirlineAR.setBounds(180, 333, 130, 31);

        jLabelAirlineAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirlineAR.setText("Airline:");
        jPanelAirplaneRegistration.add(jLabelAirlineAR);
        jLabelAirlineAR.setBounds(53, 336, 70, 25);

        jButtonCreateAR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonCreateAR.setText("Create");
        jButtonCreateAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateARActionPerformed(evt);
            }
        });
        jPanelAirplaneRegistration.add(jButtonCreateAR);
        jButtonCreateAR.setBounds(490, 480, 120, 40);

        jTabbedPane1.addTab("Airplane registration", jPanelAirplaneRegistration);

        jLabelAirportIDLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportIDLR.setText("Airport ID:");

        jtxtAirportIDLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelAirportNameLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportNameLR.setText("Airport name:");

        jtxtAirportNameLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jtxtAirportCityLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelAirportCityLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportCityLR.setText("Airport city:");

        jLabelAirportCountryLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportCountryLR.setText("Airport country:");

        jtxtAirportCountryLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jtxtAirportLatitudeLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelAirportLatitudeLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportLatitudeLR.setText("Airport latitude:");

        jLabelAirportLongitudeLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelAirportLongitudeLR.setText("Airport longitude:");

        jtxtAirportLongitudeLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jButtonCreateLR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonCreateLR.setText("Create");
        jButtonCreateLR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateLRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLocationRegistrationLayout = new javax.swing.GroupLayout(jPanelLocationRegistration);
        jPanelLocationRegistration.setLayout(jPanelLocationRegistrationLayout);
        jPanelLocationRegistrationLayout.setHorizontalGroup(
            jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAirportIDLR)
                            .addComponent(jLabelAirportNameLR)
                            .addComponent(jLabelAirportCityLR)
                            .addComponent(jLabelAirportCountryLR)
                            .addComponent(jLabelAirportLatitudeLR)
                            .addComponent(jLabelAirportLongitudeLR))
                        .addGap(80, 80, 80)
                        .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtAirportLongitudeLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAirportIDLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAirportNameLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAirportCityLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAirportCountryLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtAirportLatitudeLR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(jButtonCreateLR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        jPanelLocationRegistrationLayout.setVerticalGroup(
            jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabelAirportIDLR)
                        .addGap(36, 36, 36)
                        .addComponent(jLabelAirportNameLR)
                        .addGap(34, 34, 34)
                        .addComponent(jLabelAirportCityLR)
                        .addGap(35, 35, 35)
                        .addComponent(jLabelAirportCountryLR)
                        .addGap(35, 35, 35)
                        .addComponent(jLabelAirportLatitudeLR))
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(jtxtAirportIDLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jtxtAirportNameLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jtxtAirportCityLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jtxtAirportCountryLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jtxtAirportLatitudeLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAirportLongitudeLR)
                    .addComponent(jtxtAirportLongitudeLR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jButtonCreateLR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jTabbedPane1.addTab("Location registration", jPanelLocationRegistration);

        jLabelIDFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDFR.setText("ID:");

        jtxtIDFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelPlaneFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelPlaneFR.setText("Plane:");

        jComboxPlaneFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxPlaneFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        jComboxDLocationFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDLocationFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabelDepartureLocationFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelDepartureLocationFR.setText("Departure location:");

        jComboxALocationFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxALocationFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabelArrivalLocationFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelArrivalLocationFR.setText("Arrival location:");

        jLabel26.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel26.setText("Scale location:");

        jComboxSLocationFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxSLocationFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel27.setText("Duration:");

        jLabel28.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel28.setText("Duration:");

        jLabelDepartureDateFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelDepartureDateFR.setText("Departure date:");

        jtxtYearFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelGuion3FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion3FR.setText("-");

        jComboxDDMonthFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDDMonthFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jLabelGuion4FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion4FR.setText("-");

        jComboxDDDayFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDDDayFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabelGuion5FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion5FR.setText("-");

        jComboxDDHourFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDDHourFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabelGuion6FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion6FR.setText("-");

        jComboxDDMinuteFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDDMinuteFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jComboxADHourFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxADHourFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabelGuion7FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion7FR.setText("-");

        jComboxADMinuteFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxADMinuteFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabelGuion8FR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion8FR.setText("-");

        jComboxSDHourFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxSDHourFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jComboxSDMinuteFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxSDMinuteFR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jButtonCreateFR.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonCreateFR.setText("Create");
        jButtonCreateFR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateFRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFlightRegistrationLayout = new javax.swing.GroupLayout(jPanelFlightRegistration);
        jPanelFlightRegistration.setLayout(jPanelFlightRegistrationLayout);
        jPanelFlightRegistrationLayout.setHorizontalGroup(
            jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboxSLocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabelArrivalLocationFR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboxALocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabelDepartureLocationFR)
                        .addGap(46, 46, 46)
                        .addComponent(jComboxDLocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIDFR)
                            .addComponent(jLabelPlaneFR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxtIDFR)
                            .addComponent(jComboxPlaneFR, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabelDepartureDateFR))
                .addGap(18, 18, 18)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jtxtYearFR, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboxDDMonthFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelGuion3FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelGuion4FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboxDDDayFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboxDDHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelGuion5FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelGuion6FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboxDDMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(jComboxADHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelGuion7FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jComboxADMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(jComboxSDHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelGuion8FR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jComboxSDMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFlightRegistrationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCreateFR, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        jPanelFlightRegistrationLayout.setVerticalGroup(
            jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelIDFR))
                    .addComponent(jtxtIDFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPlaneFR)
                    .addComponent(jComboxPlaneFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboxDDHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGuion5FR)
                    .addComponent(jLabelGuion6FR)
                    .addComponent(jComboxDDMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelDepartureLocationFR)
                                .addComponent(jComboxDLocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelDepartureDateFR))
                            .addComponent(jtxtYearFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboxDDMonthFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelGuion3FR)
                            .addComponent(jLabelGuion4FR)
                            .addComponent(jComboxDDDayFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelArrivalLocationFR)
                                .addComponent(jComboxALocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addComponent(jComboxADHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelGuion7FR)
                            .addComponent(jComboxADMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboxSDHourFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelGuion8FR)
                            .addComponent(jComboxSDMinuteFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(jComboxSLocationFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jButtonCreateFR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("Flight registration", jPanelFlightRegistration);

        jLabelIDUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDUI.setText("ID:");

        jtxtIDUI.setEditable(false);
        jtxtIDUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jtxtIDUI.setEnabled(false);

        jLabelFirstNameUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelFirstNameUI.setText("First Name:");

        jtxtFirstNameUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelLastNameUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelLastNameUI.setText("Last Name:");

        jtxtLastNameUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelBirthdateUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelBirthdateUI.setText("Birthdate:");

        jtxtYearUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jComboxMonthUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxMonthUI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jComboxDayUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxDayUI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jtxtPhone2UI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelGuion9UI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelGuion9UI.setText("-");

        jtxtPhone1UI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabelMasUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelMasUI.setText("+");

        jLabelPhoneUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelPhoneUI.setText("Phone:");

        jLabelCountryUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelCountryUI.setText("Country:");

        jtxtCountryUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jButtonUpdateUI.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonUpdateUI.setText("Update");
        jButtonUpdateUI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateUIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelUpdateInfoLayout = new javax.swing.GroupLayout(jPanelUpdateInfo);
        jPanelUpdateInfo.setLayout(jPanelUpdateInfoLayout);
        jPanelUpdateInfoLayout.setHorizontalGroup(
            jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelIDUI)
                                .addGap(108, 108, 108)
                                .addComponent(jtxtIDUI, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelFirstNameUI)
                                .addGap(41, 41, 41)
                                .addComponent(jtxtFirstNameUI, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelLastNameUI)
                                .addGap(43, 43, 43)
                                .addComponent(jtxtLastNameUI, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelBirthdateUI)
                                .addGap(55, 55, 55)
                                .addComponent(jtxtYearUI, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jComboxMonthUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jComboxDayUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelPhoneUI)
                                .addGap(56, 56, 56)
                                .addComponent(jLabelMasUI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jtxtPhone1UI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabelGuion9UI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jtxtPhone2UI, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabelCountryUI)
                                .addGap(63, 63, 63)
                                .addComponent(jtxtCountryUI, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(jButtonUpdateUI)))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        jPanelUpdateInfoLayout.setVerticalGroup(
            jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIDUI)
                    .addComponent(jtxtIDUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelFirstNameUI)
                    .addComponent(jtxtFirstNameUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLastNameUI)
                    .addComponent(jtxtLastNameUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelBirthdateUI)
                    .addComponent(jtxtYearUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboxMonthUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboxDayUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPhoneUI)
                    .addComponent(jLabelMasUI)
                    .addComponent(jtxtPhone1UI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGuion9UI)
                    .addComponent(jtxtPhone2UI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCountryUI)
                    .addComponent(jtxtCountryUI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jButtonUpdateUI)
                .addGap(113, 113, 113))
        );

        jTabbedPane1.addTab("Update info", jPanelUpdateInfo);

        jtxtIDATF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jtxtIDATF.setEnabled(false);

        jLabelIDATF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDATF.setText("ID:");

        jLabelFlightATF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelFlightATF.setText("Flight:");

        jComboxFlightATF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxFlightATF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        jButtonAddATF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonAddATF.setText("Add");
        jButtonAddATF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddATFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddToFlightLayout = new javax.swing.GroupLayout(jPanelAddToFlight);
        jPanelAddToFlight.setLayout(jPanelAddToFlightLayout);
        jPanelAddToFlightLayout.setHorizontalGroup(
            jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIDATF)
                    .addComponent(jLabelFlightATF))
                .addGap(79, 79, 79)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboxFlightATF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtIDATF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(829, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddToFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAddATF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        jPanelAddToFlightLayout.setVerticalGroup(
            jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelIDATF))
                    .addComponent(jtxtIDATF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFlightATF)
                    .addComponent(jComboxFlightATF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(jButtonAddATF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Add to flight", jPanelAddToFlight);

        jTable1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSMF.setViewportView(jTable1);

        jButtonRefreshSMF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRefreshSMF.setText("Refresh");
        jButtonRefreshSMF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshSMFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowMyFlightsLayout = new javax.swing.GroupLayout(jPanelShowMyFlights);
        jPanelShowMyFlights.setLayout(jPanelShowMyFlightsLayout);
        jPanelShowMyFlightsLayout.setHorizontalGroup(
            jPanelShowMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowMyFlightsLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jScrollPaneSMF, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowMyFlightsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRefreshSMF)
                .addGap(527, 527, 527))
        );
        jPanelShowMyFlightsLayout.setVerticalGroup(
            jPanelShowMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowMyFlightsLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPaneSMF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButtonRefreshSMF)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show my flights", jPanelShowMyFlights);

        jTable2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSAPA.setViewportView(jTable2);

        jButtonRefreshSAPA.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRefreshSAPA.setText("Refresh");
        jButtonRefreshSAPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshSAPAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowAllPassengersLayout = new javax.swing.GroupLayout(jPanelShowAllPassengers);
        jPanelShowAllPassengers.setLayout(jPanelShowAllPassengersLayout);
        jPanelShowAllPassengersLayout.setHorizontalGroup(
            jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                .addGroup(jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(jButtonRefreshSAPA))
                    .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPaneSAPA, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelShowAllPassengersLayout.setVerticalGroup(
            jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowAllPassengersLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPaneSAPA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonRefreshSAPA)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show all passengers", jPanelShowAllPassengers);

        jTable3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSAF.setViewportView(jTable3);

        jButtonRefreshSAF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRefreshSAF.setText("Refresh");
        jButtonRefreshSAF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshSAFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowAllFlightsLayout = new javax.swing.GroupLayout(jPanelShowAllFlights);
        jPanelShowAllFlights.setLayout(jPanelShowAllFlightsLayout);
        jPanelShowAllFlightsLayout.setHorizontalGroup(
            jPanelShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllFlightsLayout.createSequentialGroup()
                .addGroup(jPanelShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllFlightsLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPaneSAF, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelShowAllFlightsLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(jButtonRefreshSAF)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelShowAllFlightsLayout.setVerticalGroup(
            jPanelShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllFlightsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPaneSAF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonRefreshSAF)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Show all flights", jPanelShowAllFlights);

        jButtonRefreshSAPL.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRefreshSAPL.setText("Refresh");
        jButtonRefreshSAPL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshSAPLActionPerformed(evt);
            }
        });

        jTableSAPL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSAPL.setViewportView(jTableSAPL);

        javax.swing.GroupLayout jPanelShowAllPlanesLayout = new javax.swing.GroupLayout(jPanelShowAllPlanes);
        jPanelShowAllPlanes.setLayout(jPanelShowAllPlanesLayout);
        jPanelShowAllPlanesLayout.setHorizontalGroup(
            jPanelShowAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllPlanesLayout.createSequentialGroup()
                .addGroup(jPanelShowAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllPlanesLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(jButtonRefreshSAPL))
                    .addGroup(jPanelShowAllPlanesLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPaneSAPL, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanelShowAllPlanesLayout.setVerticalGroup(
            jPanelShowAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowAllPlanesLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPaneSAPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButtonRefreshSAPL)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all planes", jPanelShowAllPlanes);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPaneSAL.setViewportView(jTable5);

        jButtonRefreshSAL.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonRefreshSAL.setText("Refresh");
        jButtonRefreshSAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshSALActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowAllLocationsLayout = new javax.swing.GroupLayout(jPanelShowAllLocations);
        jPanelShowAllLocations.setLayout(jPanelShowAllLocationsLayout);
        jPanelShowAllLocationsLayout.setHorizontalGroup(
            jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                .addGroup(jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(jButtonRefreshSAL))
                    .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPaneSAL, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanelShowAllLocationsLayout.setVerticalGroup(
            jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowAllLocationsLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPaneSAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButtonRefreshSAL)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all locations", jPanelShowAllLocations);

        jComboxHourDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxHourDF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabelHoursDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelHoursDF.setText("Hours:");

        jLabelIDDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelIDDF.setText("ID:");

        jComboxIDDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxIDDF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        jLabelMinutesDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabelMinutesDF.setText("Minutes:");

        jComboxMinuteDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jComboxMinuteDF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jButtonDelayDF.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButtonDelayDF.setText("Delay");
        jButtonDelayDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelayDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDelayFlightLayout = new javax.swing.GroupLayout(jPanelDelayFlight);
        jPanelDelayFlight.setLayout(jPanelDelayFlightLayout);
        jPanelDelayFlightLayout.setHorizontalGroup(
            jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                        .addComponent(jLabelMinutesDF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboxMinuteDF, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                        .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelIDDF)
                            .addComponent(jLabelHoursDF))
                        .addGap(79, 79, 79)
                        .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboxHourDF, 0, 105, Short.MAX_VALUE)
                            .addComponent(jComboxIDDF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDelayFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDelayDF)
                .addGap(531, 531, 531))
        );
        jPanelDelayFlightLayout.setVerticalGroup(
            jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIDDF)
                    .addComponent(jComboxIDDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHoursDF)
                    .addComponent(jComboxHourDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMinutesDF)
                    .addComponent(jComboxMinuteDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(jButtonDelayDF)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Delay flight", jPanelDelayFlight);

        panelRound1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            jTabbedPane1.setEnabledAt(i, true);
        }
        jTabbedPane1.setEnabledAt(5, false);
        jTabbedPane1.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {

            jTabbedPane1.setEnabledAt(i, false);

        }
        jTabbedPane1.setEnabledAt(9, true);
        jTabbedPane1.setEnabledAt(5, true);
        jTabbedPane1.setEnabledAt(6, true);
        jTabbedPane1.setEnabledAt(7, true);
        jTabbedPane1.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void jButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegisterActionPerformed
        // TODO add your handling code here:
        String id = jtxtID.getText();
        String firstname = jtxtFirstName.getText();
        String lastname = jtxtLastName.getText();

        String year = jtxtYear.getText();
        String month = jComboxMonth.getSelectedItem().toString();
        String day = jComboxDay.getSelectedItem().toString();

        String phoneCode = jtxtPhone1.getText();
        String phone = jtxtPhone2.getText();
        String country = jtxtCountry.getText();

        //this.userSelect.addItem("" + id); como long
        Response response = PassengerController.registerPassenger(id, firstname, lastname, year, month, day, phoneCode, phone, country);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButtonRegisterActionPerformed

    private void jButtonCreateARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateARActionPerformed
        // TODO add your handling code here:
        String id = jtxtIDAR.getText();
        String brand = jtxtBrandAR.getText();
        String model = jtxtModelAR.getText();
        String maxCapacity = jtxtMaxCapacityAR.getText();
        String airline = jtxtAirlineAR.getText();

        //this.planes.add(new Plane(id, brand, model, maxCapacity, airline));
        //this.jComboxPlaneFR.addItem(id);
        Response response = PlaneController.createPlane(id, brand, model, maxCapacity, airline);
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButtonCreateARActionPerformed

    private void jButtonCreateLRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateLRActionPerformed
        // TODO add your handling code here:
        String id = jtxtAirportIDLR.getText();
        String name = jtxtAirportNameLR.getText();
        String city = jtxtAirportCityLR.getText();
        String country = jtxtAirportCountryLR.getText();
        String latitude = jtxtAirportLatitudeLR.getText();
        String longitude = jtxtAirportLongitudeLR.getText();

        //this.locations.add(new Location(id, name, city, country, latitude, longitude));
//        this.jComboxDLocationFR.addItem(id);
//        this.jComboxALocationFR.addItem(id);
//        this.jComboxSLocationFR.addItem(id);
        Response response = LocationController.createLocation(id, name, city, country, latitude, longitude);
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_jButtonCreateLRActionPerformed

    private void jButtonCreateFRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateFRActionPerformed
//        // TODO add your handling code here:
//        String id = jtxtIDFR.getText();
//        String planeId = jComboxPlaneFR.getItemAt(jComboxPlaneFR.getSelectedIndex());
//        String departureLocationId = jComboxDLocationFR.getItemAt(jComboxDLocationFR.getSelectedIndex());
//        String arrivalLocationId = jComboxALocationFR.getItemAt(jComboxALocationFR.getSelectedIndex());
//        String scaleLocationId = jComboxSLocationFR.getItemAt(jComboxSLocationFR.getSelectedIndex());
//        int year = Integer.parseInt(jtxtYearFR.getText());
//        int month = Integer.parseInt(jComboxDDMonthFR.getItemAt(jComboxDDMonthFR.getSelectedIndex()));
//        int day = Integer.parseInt(jComboxDDDayFR.getItemAt(jComboxDDDayFR.getSelectedIndex()));
//        int hour = Integer.parseInt(jComboxDDHourFR.getItemAt(jComboxDDHourFR.getSelectedIndex()));
//        int minutes = Integer.parseInt(jComboxDDMinuteFR.getItemAt(jComboxDDMinuteFR.getSelectedIndex()));
//        int hoursDurationsArrival = Integer.parseInt(jComboxADHourFR.getItemAt(jComboxADHourFR.getSelectedIndex()));
//        int minutesDurationsArrival = Integer.parseInt(jComboxADMinuteFR.getItemAt(jComboxADMinuteFR.getSelectedIndex()));
//        int hoursDurationsScale = Integer.parseInt(jComboxSDHourFR.getItemAt(jComboxSDHourFR.getSelectedIndex()));
//        int minutesDurationsScale = Integer.parseInt(jComboxSDMinuteFR.getItemAt(jComboxSDMinuteFR.getSelectedIndex()));
//
//        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);
//
//        Plane plane = null;
//        for (Plane p : this.planes) {
//            if (planeId.equals(p.getId())) {
//                plane = p;
//            }
//        }
//
//        Location departure = null;
//        Location arrival = null;
//        Location scale = null;
//        for (Location location : this.locations) {
//            if (departureLocationId.equals(location.getAirportId())) {
//                departure = location;
//            }
//            if (arrivalLocationId.equals(location.getAirportId())) {
//                arrival = location;
//            }
//            if (scaleLocationId.equals(location.getAirportId())) {
//                scale = location;
//            }
//        }
//
//        if (scale == null) {
//            this.flights.add(new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival));
//        } else {
//            this.flights.add(new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale));
//        }
//
//        this.jComboxFlightATF.addItem(id);

        //AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        String id = jtxtIDFR.getText();
        String planeId = jComboxPlaneFR.getItemAt(jComboxPlaneFR.getSelectedIndex());
        String departureLocationId = jComboxDLocationFR.getItemAt(jComboxDLocationFR.getSelectedIndex());
        String arrivalLocationId = jComboxALocationFR.getItemAt(jComboxALocationFR.getSelectedIndex());
        String scaleLocationId = jComboxSLocationFR.getItemAt(jComboxSLocationFR.getSelectedIndex());
        String year = jtxtYearFR.getText();
        String month = jComboxDDMonthFR.getItemAt(jComboxDDMonthFR.getSelectedIndex());
        String day = jComboxDDDayFR.getItemAt(jComboxDDDayFR.getSelectedIndex());
        String hour = jComboxDDHourFR.getItemAt(jComboxDDHourFR.getSelectedIndex());
        String minutes = jComboxDDMinuteFR.getItemAt(jComboxDDMinuteFR.getSelectedIndex());
        String hoursDurationsArrival = jComboxADHourFR.getItemAt(jComboxADHourFR.getSelectedIndex());
        String minutesDurationsArrival = jComboxADMinuteFR.getItemAt(jComboxADMinuteFR.getSelectedIndex());
        String hoursDurationsScale = jComboxSDHourFR.getItemAt(jComboxSDHourFR.getSelectedIndex());
        String minutesDurationsScale = jComboxSDMinuteFR.getItemAt(jComboxSDMinuteFR.getSelectedIndex());
        
        Response response = FlightController.createFlight(id, planeId, departureLocationId, scaleLocationId, arrivalLocationId, year, month, day, hour, minutes, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale);
        
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCreateFRActionPerformed

    private void jButtonUpdateUIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateUIActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(jtxtIDUI.getText());
        String firstname = jtxtFirstNameUI.getText();
        String lastname = jtxtLastNameUI.getText();
        int year = Integer.parseInt(jtxtYearUI.getText());
        int month = Integer.parseInt(jComboxMonth.getItemAt(jComboxMonthUI.getSelectedIndex()));
        int day = Integer.parseInt(jComboxDay.getItemAt(jComboxDayUI.getSelectedIndex()));
        int phoneCode = Integer.parseInt(jtxtPhone1UI.getText());
        long phone = Long.parseLong(jtxtPhone2UI.getText());
        String country = jtxtCountryUI.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == id) {
                passenger = p;
            }
        }

        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_jButtonUpdateUIActionPerformed

    private void jButtonAddATFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddATFActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(jtxtIDATF.getText());
        String flightId = jComboxFlightATF.getItemAt(jComboxFlightATF.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_jButtonAddATFActionPerformed

    private void jButtonDelayDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelayDFActionPerformed
        // TODO add your handling code here:
        String flightId = jComboxIDDF.getItemAt(jComboxIDDF.getSelectedIndex());
        int hours = Integer.parseInt(jComboxHourDF.getItemAt(jComboxHourDF.getSelectedIndex()));
        int minutes = Integer.parseInt(jComboxMinuteDF.getItemAt(jComboxMinuteDF.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_jButtonDelayDFActionPerformed

    private void jButtonRefreshSMFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshSMFActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getItemAt(userSelect.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_jButtonRefreshSMFActionPerformed

    private void jButtonRefreshSAPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshSAPAActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_jButtonRefreshSAPAActionPerformed

    private void jButtonRefreshSAFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshSAFActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_jButtonRefreshSAFActionPerformed

    private void jButtonRefreshSAPLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshSAPLActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTableSAPL.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_jButtonRefreshSAPLActionPerformed

    private void jButtonRefreshSALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshSALActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_jButtonRefreshSALActionPerformed

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (!id.equals(userSelect.getItemAt(0))) {
                jtxtIDUI.setText(id);
                jtxtIDATF.setText(id);
            } else {
                jtxtIDUI.setText("");
                jtxtIDATF.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton administrator;
    private javax.swing.JButton jButtonAddATF;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonCreateAR;
    private javax.swing.JButton jButtonCreateFR;
    private javax.swing.JButton jButtonCreateLR;
    private javax.swing.JButton jButtonDelayDF;
    private javax.swing.JButton jButtonRefreshSAF;
    private javax.swing.JButton jButtonRefreshSAL;
    private javax.swing.JButton jButtonRefreshSAPA;
    private javax.swing.JButton jButtonRefreshSAPL;
    private javax.swing.JButton jButtonRefreshSMF;
    private javax.swing.JButton jButtonRegister;
    private javax.swing.JButton jButtonUpdateUI;
    private javax.swing.JComboBox<String> jComboxADHourFR;
    private javax.swing.JComboBox<String> jComboxADMinuteFR;
    private javax.swing.JComboBox<String> jComboxALocationFR;
    private javax.swing.JComboBox<String> jComboxDDDayFR;
    private javax.swing.JComboBox<String> jComboxDDHourFR;
    private javax.swing.JComboBox<String> jComboxDDMinuteFR;
    private javax.swing.JComboBox<String> jComboxDDMonthFR;
    private javax.swing.JComboBox<String> jComboxDLocationFR;
    private javax.swing.JComboBox<String> jComboxDay;
    private javax.swing.JComboBox<String> jComboxDayUI;
    private javax.swing.JComboBox<String> jComboxFlightATF;
    private javax.swing.JComboBox<String> jComboxHourDF;
    private javax.swing.JComboBox<String> jComboxIDDF;
    private javax.swing.JComboBox<String> jComboxMinuteDF;
    private javax.swing.JComboBox<String> jComboxMonth;
    private javax.swing.JComboBox<String> jComboxMonthUI;
    private javax.swing.JComboBox<String> jComboxPlaneFR;
    private javax.swing.JComboBox<String> jComboxSDHourFR;
    private javax.swing.JComboBox<String> jComboxSDMinuteFR;
    private javax.swing.JComboBox<String> jComboxSLocationFR;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabelAirlineAR;
    private javax.swing.JLabel jLabelAirportCityLR;
    private javax.swing.JLabel jLabelAirportCountryLR;
    private javax.swing.JLabel jLabelAirportIDLR;
    private javax.swing.JLabel jLabelAirportLatitudeLR;
    private javax.swing.JLabel jLabelAirportLongitudeLR;
    private javax.swing.JLabel jLabelAirportNameLR;
    private javax.swing.JLabel jLabelArrivalLocationFR;
    private javax.swing.JLabel jLabelBirthdate;
    private javax.swing.JLabel jLabelBirthdateUI;
    private javax.swing.JLabel jLabelBrandAR;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelCountryUI;
    private javax.swing.JLabel jLabelDepartureDateFR;
    private javax.swing.JLabel jLabelDepartureLocationFR;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelFirstNameUI;
    private javax.swing.JLabel jLabelFlightATF;
    private javax.swing.JLabel jLabelGuion1;
    private javax.swing.JLabel jLabelGuion2;
    private javax.swing.JLabel jLabelGuion3;
    private javax.swing.JLabel jLabelGuion3FR;
    private javax.swing.JLabel jLabelGuion4FR;
    private javax.swing.JLabel jLabelGuion5FR;
    private javax.swing.JLabel jLabelGuion6FR;
    private javax.swing.JLabel jLabelGuion7FR;
    private javax.swing.JLabel jLabelGuion8FR;
    private javax.swing.JLabel jLabelGuion9UI;
    private javax.swing.JLabel jLabelHoursDF;
    private javax.swing.JLabel jLabelIDAR;
    private javax.swing.JLabel jLabelIDATF;
    private javax.swing.JLabel jLabelIDDF;
    private javax.swing.JLabel jLabelIDFR;
    private javax.swing.JLabel jLabelIDPR;
    private javax.swing.JLabel jLabelIDUI;
    private javax.swing.JLabel jLabelLastName;
    private javax.swing.JLabel jLabelLastNameUI;
    private javax.swing.JLabel jLabelMas;
    private javax.swing.JLabel jLabelMasUI;
    private javax.swing.JLabel jLabelMaxCapacityAR;
    private javax.swing.JLabel jLabelMinutesDF;
    private javax.swing.JLabel jLabelModelAR;
    private javax.swing.JLabel jLabelPhone;
    private javax.swing.JLabel jLabelPhoneUI;
    private javax.swing.JLabel jLabelPlaneFR;
    private javax.swing.JPanel jPanelAddToFlight;
    private javax.swing.JPanel jPanelAdministration;
    private javax.swing.JPanel jPanelAirplaneRegistration;
    private javax.swing.JPanel jPanelDelayFlight;
    private javax.swing.JPanel jPanelFlightRegistration;
    private javax.swing.JPanel jPanelLocationRegistration;
    private javax.swing.JPanel jPanelPassengerRegistration;
    private javax.swing.JPanel jPanelShowAllFlights;
    private javax.swing.JPanel jPanelShowAllLocations;
    private javax.swing.JPanel jPanelShowAllPassengers;
    private javax.swing.JPanel jPanelShowAllPlanes;
    private javax.swing.JPanel jPanelShowMyFlights;
    private javax.swing.JPanel jPanelUpdateInfo;
    private javax.swing.JScrollPane jScrollPaneSAF;
    private javax.swing.JScrollPane jScrollPaneSAL;
    private javax.swing.JScrollPane jScrollPaneSAPA;
    private javax.swing.JScrollPane jScrollPaneSAPL;
    private javax.swing.JScrollPane jScrollPaneSMF;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTableSAPL;
    private javax.swing.JTextField jtxtAirlineAR;
    private javax.swing.JTextField jtxtAirportCityLR;
    private javax.swing.JTextField jtxtAirportCountryLR;
    private javax.swing.JTextField jtxtAirportIDLR;
    private javax.swing.JTextField jtxtAirportLatitudeLR;
    private javax.swing.JTextField jtxtAirportLongitudeLR;
    private javax.swing.JTextField jtxtAirportNameLR;
    private javax.swing.JTextField jtxtBrandAR;
    private javax.swing.JTextField jtxtCountry;
    private javax.swing.JTextField jtxtCountryUI;
    private javax.swing.JTextField jtxtFirstName;
    private javax.swing.JTextField jtxtFirstNameUI;
    private javax.swing.JTextField jtxtID;
    private javax.swing.JTextField jtxtIDAR;
    private javax.swing.JTextField jtxtIDATF;
    private javax.swing.JTextField jtxtIDFR;
    private javax.swing.JTextField jtxtIDUI;
    private javax.swing.JTextField jtxtLastName;
    private javax.swing.JTextField jtxtLastNameUI;
    private javax.swing.JTextField jtxtMaxCapacityAR;
    private javax.swing.JTextField jtxtModelAR;
    private javax.swing.JTextField jtxtPhone1;
    private javax.swing.JTextField jtxtPhone1UI;
    private javax.swing.JTextField jtxtPhone2;
    private javax.swing.JTextField jtxtPhone2UI;
    private javax.swing.JTextField jtxtYear;
    private javax.swing.JTextField jtxtYearFR;
    private javax.swing.JTextField jtxtYearUI;
    private core.models.PanelRound panelRound1;
    private core.models.PanelRound panelRound2;
    private core.models.PanelRound panelRound3;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
